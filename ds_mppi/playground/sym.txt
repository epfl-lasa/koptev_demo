
Link 1

def p1(q, p, a):
torch.tensor([[a[0] - torch.sin(q[0])*p[1] + torch.cos(q[0])*p[0]],
 [torch.sin(q[0])*p[0] + torch.cos(q[0])*p[1]],
 [p[2]]])
 
def d1(q, y, p, a):
torch.sqrt((p[2] - y[2])**2 + (torch.sin(q[0])*p[0] + torch.cos(q[0])*p[1] - y[1])**2 + (a[0] - torch.sin(q[0])*p[1] + torch.cos(q[0])*p[0] - y[0])**2)


def r1(q, y, p, a):
torch.tensor([[(-a[0]*torch.sin(q[0])*p[0] - a[0]*torch.cos(q[0])*p[1] + torch.sin(q[0])*p[0]*y[0] + torch.sin(q[0])*p[1]*y[1] - torch.cos(q[0])*p[0]*y[1] + torch.cos(q[0])*p[1]*y[0])/torch.sqrt((p[2] - y[2])**2 + (torch.sin(q[0])*p[0] + torch.cos(q[0])*p[1] - y[1])**2 + (a[0] - torch.sin(q[0])*p[1] + torch.cos(q[0])*p[0] - y[0])**2),
 0, 0, 0, 0, 0, 0]])


Link 2
def p2(q, p, a):
torch.tensor([[a[0] + a[1]*torch.cos(q[0]) - torch.sin(q[0] + q[1])*p[1] + torch.cos(q[0] + q[1])*p[0]],
 [a[1]*torch.sin(q[0]) + torch.sin(q[0] + q[1])*p[0] + torch.cos(q[0] + q[1])*p[1]],
 [p[2]]])

def d2(q, y, p, a):
torch.sqrt((p[2] - y[2])**2 + (a[1]*torch.sin(q[0]) + torch.sin(q[0] + q[1])*p[0] + torch.cos(q[0] + q[1])*p[1] - y[1])**2 + (-a[0] - a[1]*torch.cos(q[0]) + torch.sin(q[0] + q[1])*p[1] - torch.cos(q[0] + q[1])*p[0] + y[0])**2)

def r2(q, y, p, a):
torch.tensor([[(-a[0]*a[1]*torch.sin(q[0]) - a[0]*torch.sin(q[0] + q[1])*p[0] - a[0]*torch.cos(q[0] + q[1])*p[1] + a[1]*torch.sin(q[0])*y[0] - a[1]*torch.cos(q[0])*y[1] + torch.sin(q[0] + q[1])*p[0]*y[0] + torch.sin(q[0] + q[1])*p[1]*y[1] - torch.cos(q[0] + q[1])*p[0]*y[1] + torch.cos(q[0] + q[1])*p[1]*y[0])/torch.sqrt((p[2] - y[2])**2 + (a[1]*torch.sin(q[0]) + torch.sin(q[0] + q[1])*p[0] + torch.cos(q[0] + q[1])*p[1] - y[1])**2 + (-a[0] - a[1]*torch.cos(q[0]) + torch.sin(q[0] + q[1])*p[1] - torch.cos(q[0] + q[1])*p[0] + y[0])**2),
 (-a[0]*torch.sin(q[0] + q[1])*p[0] - a[0]*torch.cos(q[0] + q[1])*p[1] - a[1]*torch.sin(q[1])*p[0] - a[1]*torch.cos(q[1])*p[1] + torch.sin(q[0] + q[1])*p[0]*y[0] + torch.sin(q[0] + q[1])*p[1]*y[1] - torch.cos(q[0] + q[1])*p[0]*y[1] + torch.cos(q[0] + q[1])*p[1]*y[0])/torch.sqrt((p[2] - y[2])**2 + (a[1]*torch.sin(q[0]) + torch.sin(q[0] + q[1])*p[0] + torch.cos(q[0] + q[1])*p[1] - y[1])**2 + (-a[0] - a[1]*torch.cos(q[0]) + torch.sin(q[0] + q[1])*p[1] - torch.cos(q[0] + q[1])*p[0] + y[0])**2),
 0, 0, 0, 0, 0]])


Link 3
def p3(q, p, a):
torch.tensor([[a[0] + a[1]*torch.cos(q[0]) + a[2]*torch.cos(q[0] + q[1]) - torch.sin(q[0] + q[1] + q[2])*p[1] + torch.cos(q[0] + q[1] + q[2])*p[0]],
 [a[1]*torch.sin(q[0]) + a[2]*torch.sin(q[0] + q[1]) + torch.sin(q[0] + q[1] + q[2])*p[0] + torch.cos(q[0] + q[1] + q[2])*p[1]],
 [p[2]]])
def d3(q, y, p, a):
torch.sqrt((p[2] - y[2])**2 + (a[1]*torch.sin(q[0]) + a[2]*torch.sin(q[0] + q[1]) + torch.sin(q[0] + q[1] + q[2])*p[0] + torch.cos(q[0] + q[1] + q[2])*p[1] - y[1])**2 + (a[0] + a[1]*torch.cos(q[0]) + a[2]*torch.cos(q[0] + q[1]) - torch.sin(q[0] + q[1] + q[2])*p[1] + torch.cos(q[0] + q[1] + q[2])*p[0] - y[0])**2)
def r3(q, y, p, a):
torch.tensor([[(-a[0]*a[1]*torch.sin(q[0]) - a[0]*a[2]*torch.sin(q[0] + q[1]) - a[0]*torch.sin(q[0] + q[1] + q[2])*p[0] - a[0]*torch.cos(q[0] + q[1] + q[2])*p[1] + a[1]*torch.sin(q[0])*y[0] - a[1]*torch.cos(q[0])*y[1] + a[2]*torch.sin(q[0] + q[1])*y[0] - a[2]*torch.cos(q[0] + q[1])*y[1] + torch.sin(q[0] + q[1] + q[2])*p[0]*y[0] + torch.sin(q[0] + q[1] + q[2])*p[1]*y[1] - torch.cos(q[0] + q[1] + q[2])*p[0]*y[1] + torch.cos(q[0] + q[1] + q[2])*p[1]*y[0])/torch.sqrt((p[2] - y[2])**2 + (-a[1]*torch.sin(q[0]) - a[2]*torch.sin(q[0] + q[1]) - torch.sin(q[0] + q[1] + q[2])*p[0] - torch.cos(q[0] + q[1] + q[2])*p[1] + y[1])**2 + (-a[0] - a[1]*torch.cos(q[0]) - a[2]*torch.cos(q[0] + q[1]) + torch.sin(q[0] + q[1] + q[2])*p[1] - torch.cos(q[0] + q[1] + q[2])*p[0] + y[0])**2),
 (-a[0]*a[2]*torch.sin(q[0] + q[1]) - a[0]*torch.sin(q[0] + q[1] + q[2])*p[0] - a[0]*torch.cos(q[0] + q[1] + q[2])*p[1] - a[1]*a[2]*torch.sin(q[1]) - a[1]*torch.sin(q[1] + q[2])*p[0] - a[1]*torch.cos(q[1] + q[2])*p[1] + a[2]*torch.sin(q[0] + q[1])*y[0] - a[2]*torch.cos(q[0] + q[1])*y[1] + torch.sin(q[0] + q[1] + q[2])*p[0]*y[0] + torch.sin(q[0] + q[1] + q[2])*p[1]*y[1] - torch.cos(q[0] + q[1] + q[2])*p[0]*y[1] + torch.cos(q[0] + q[1] + q[2])*p[1]*y[0])/torch.sqrt((p[2] - y[2])**2 + (-a[1]*torch.sin(q[0]) - a[2]*torch.sin(q[0] + q[1]) - torch.sin(q[0] + q[1] + q[2])*p[0] - torch.cos(q[0] + q[1] + q[2])*p[1] + y[1])**2 + (-a[0] - a[1]*torch.cos(q[0]) - a[2]*torch.cos(q[0] + q[1]) + torch.sin(q[0] + q[1] + q[2])*p[1] - torch.cos(q[0] + q[1] + q[2])*p[0] + y[0])**2),
 (-a[0]*torch.sin(q[0] + q[1] + q[2])*p[0] - a[0]*torch.cos(q[0] + q[1] + q[2])*p[1] - a[1]*torch.sin(q[1] + q[2])*p[0] - a[1]*torch.cos(q[1] + q[2])*p[1] - a[2]*torch.sin(q[2])*p[0] - a[2]*torch.cos(q[2])*p[1] + torch.sin(q[0] + q[1] + q[2])*p[0]*y[0] + torch.sin(q[0] + q[1] + q[2])*p[1]*y[1] - torch.cos(q[0] + q[1] + q[2])*p[0]*y[1] + torch.cos(q[0] + q[1] + q[2])*p[1]*y[0])/torch.sqrt((p[2] - y[2])**2 + (-a[1]*torch.sin(q[0]) - a[2]*torch.sin(q[0] + q[1]) - torch.sin(q[0] + q[1] + q[2])*p[0] - torch.cos(q[0] + q[1] + q[2])*p[1] + y[1])**2 + (-a[0] - a[1]*torch.cos(q[0]) - a[2]*torch.cos(q[0] + q[1]) + torch.sin(q[0] + q[1] + q[2])*p[1] - torch.cos(q[0] + q[1] + q[2])*p[0] + y[0])**2),
 0, 0, 0, 0]])


Link 4
def p4(q, p, a):
torch.tensor([[a[0] + a[1]*torch.cos(q[0]) + a[2]*torch.cos(q[0] + q[1]) + a[3]*torch.cos(q[0] + q[1] + q[2]) - torch.sin(q[0] + q[1] + q[2] + q[3])*p[1] + torch.cos(q[0] + q[1] + q[2] + q[3])*p[0]],
 [a[1]*torch.sin(q[0]) + a[2]*torch.sin(q[0] + q[1]) + a[3]*torch.sin(q[0] + q[1] + q[2]) + torch.sin(q[0] + q[1] + q[2] + q[3])*p[0] + torch.cos(q[0] + q[1] + q[2] + q[3])*p[1]],
 [p[2]]])
def d4(q, y, p, a):
torch.sqrt((p[2] - y[2])**2 + (a[1]*torch.sin(q[0]) + a[2]*torch.sin(q[0] + q[1]) + a[3]*torch.sin(q[0] + q[1] + q[2]) + torch.sin(q[0] + q[1] + q[2] + q[3])*p[0] + torch.cos(q[0] + q[1] + q[2] + q[3])*p[1] - y[1])**2 + (a[0] + a[1]*torch.cos(q[0]) + a[2]*torch.cos(q[0] + q[1]) + a[3]*torch.cos(q[0] + q[1] + q[2]) - torch.sin(q[0] + q[1] + q[2] + q[3])*p[1] + torch.cos(q[0] + q[1] + q[2] + q[3])*p[0] - y[0])**2)
def r4(q, y, p, a):
torch.tensor([[(-a[0]*a[1]*torch.sin(q[0]) - a[0]*a[2]*torch.sin(q[0] + q[1]) - a[0]*a[3]*torch.sin(q[0] + q[1] + q[2]) - a[0]*torch.sin(q[0] + q[1] + q[2] + q[3])*p[0] - a[0]*torch.cos(q[0] + q[1] + q[2] + q[3])*p[1] + a[1]*torch.sin(q[0])*y[0] - a[1]*torch.cos(q[0])*y[1] + a[2]*torch.sin(q[0] + q[1])*y[0] - a[2]*torch.cos(q[0] + q[1])*y[1] + a[3]*torch.sin(q[0] + q[1] + q[2])*y[0] - a[3]*torch.cos(q[0] + q[1] + q[2])*y[1] + torch.sin(q[0] + q[1] + q[2] + q[3])*p[0]*y[0] + torch.sin(q[0] + q[1] + q[2] + q[3])*p[1]*y[1] - torch.cos(q[0] + q[1] + q[2] + q[3])*p[0]*y[1] + torch.cos(q[0] + q[1] + q[2] + q[3])*p[1]*y[0])/torch.sqrt((p[2] - y[2])**2 + (-a[1]*torch.sin(q[0]) - a[2]*torch.sin(q[0] + q[1]) - a[3]*torch.sin(q[0] + q[1] + q[2]) - torch.sin(q[0] + q[1] + q[2] + q[3])*p[0] - torch.cos(q[0] + q[1] + q[2] + q[3])*p[1] + y[1])**2 + (-a[0] - a[1]*torch.cos(q[0]) - a[2]*torch.cos(q[0] + q[1]) - a[3]*torch.cos(q[0] + q[1] + q[2]) + torch.sin(q[0] + q[1] + q[2] + q[3])*p[1] - torch.cos(q[0] + q[1] + q[2] + q[3])*p[0] + y[0])**2),
 (-a[0]*a[2]*torch.sin(q[0] + q[1]) - a[0]*a[3]*torch.sin(q[0] + q[1] + q[2]) - a[0]*torch.sin(q[0] + q[1] + q[2] + q[3])*p[0] - a[0]*torch.cos(q[0] + q[1] + q[2] + q[3])*p[1] - a[1]*a[2]*torch.sin(q[1]) - a[1]*a[3]*torch.sin(q[1] + q[2]) - a[1]*torch.sin(q[1] + q[2] + q[3])*p[0] - a[1]*torch.cos(q[1] + q[2] + q[3])*p[1] + a[2]*torch.sin(q[0] + q[1])*y[0] - a[2]*torch.cos(q[0] + q[1])*y[1] + a[3]*torch.sin(q[0] + q[1] + q[2])*y[0] - a[3]*torch.cos(q[0] + q[1] + q[2])*y[1] + torch.sin(q[0] + q[1] + q[2] + q[3])*p[0]*y[0] + torch.sin(q[0] + q[1] + q[2] + q[3])*p[1]*y[1] - torch.cos(q[0] + q[1] + q[2] + q[3])*p[0]*y[1] + torch.cos(q[0] + q[1] + q[2] + q[3])*p[1]*y[0])/torch.sqrt((p[2] - y[2])**2 + (-a[1]*torch.sin(q[0]) - a[2]*torch.sin(q[0] + q[1]) - a[3]*torch.sin(q[0] + q[1] + q[2]) - torch.sin(q[0] + q[1] + q[2] + q[3])*p[0] - torch.cos(q[0] + q[1] + q[2] + q[3])*p[1] + y[1])**2 + (-a[0] - a[1]*torch.cos(q[0]) - a[2]*torch.cos(q[0] + q[1]) - a[3]*torch.cos(q[0] + q[1] + q[2]) + torch.sin(q[0] + q[1] + q[2] + q[3])*p[1] - torch.cos(q[0] + q[1] + q[2] + q[3])*p[0] + y[0])**2),
 (-a[0]*a[3]*torch.sin(q[0] + q[1] + q[2]) - a[0]*torch.sin(q[0] + q[1] + q[2] + q[3])*p[0] - a[0]*torch.cos(q[0] + q[1] + q[2] + q[3])*p[1] - a[1]*a[3]*torch.sin(q[1] + q[2]) - a[1]*torch.sin(q[1] + q[2] + q[3])*p[0] - a[1]*torch.cos(q[1] + q[2] + q[3])*p[1] - a[2]*a[3]*torch.sin(q[2]) - a[2]*torch.sin(q[2] + q[3])*p[0] - a[2]*torch.cos(q[2] + q[3])*p[1] + a[3]*torch.sin(q[0] + q[1] + q[2])*y[0] - a[3]*torch.cos(q[0] + q[1] + q[2])*y[1] + torch.sin(q[0] + q[1] + q[2] + q[3])*p[0]*y[0] + torch.sin(q[0] + q[1] + q[2] + q[3])*p[1]*y[1] - torch.cos(q[0] + q[1] + q[2] + q[3])*p[0]*y[1] + torch.cos(q[0] + q[1] + q[2] + q[3])*p[1]*y[0])/torch.sqrt((p[2] - y[2])**2 + (-a[1]*torch.sin(q[0]) - a[2]*torch.sin(q[0] + q[1]) - a[3]*torch.sin(q[0] + q[1] + q[2]) - torch.sin(q[0] + q[1] + q[2] + q[3])*p[0] - torch.cos(q[0] + q[1] + q[2] + q[3])*p[1] + y[1])**2 + (-a[0] - a[1]*torch.cos(q[0]) - a[2]*torch.cos(q[0] + q[1]) - a[3]*torch.cos(q[0] + q[1] + q[2]) + torch.sin(q[0] + q[1] + q[2] + q[3])*p[1] - torch.cos(q[0] + q[1] + q[2] + q[3])*p[0] + y[0])**2),
 (-a[0]*torch.sin(q[0] + q[1] + q[2] + q[3])*p[0] - a[0]*torch.cos(q[0] + q[1] + q[2] + q[3])*p[1] - a[1]*torch.sin(q[1] + q[2] + q[3])*p[0] - a[1]*torch.cos(q[1] + q[2] + q[3])*p[1] - a[2]*torch.sin(q[2] + q[3])*p[0] - a[2]*torch.cos(q[2] + q[3])*p[1] - a[3]*torch.sin(q[3])*p[0] - a[3]*torch.cos(q[3])*p[1] + torch.sin(q[0] + q[1] + q[2] + q[3])*p[0]*y[0] + torch.sin(q[0] + q[1] + q[2] + q[3])*p[1]*y[1] - torch.cos(q[0] + q[1] + q[2] + q[3])*p[0]*y[1] + torch.cos(q[0] + q[1] + q[2] + q[3])*p[1]*y[0])/torch.sqrt((p[2] - y[2])**2 + (-a[1]*torch.sin(q[0]) - a[2]*torch.sin(q[0] + q[1]) - a[3]*torch.sin(q[0] + q[1] + q[2]) - torch.sin(q[0] + q[1] + q[2] + q[3])*p[0] - torch.cos(q[0] + q[1] + q[2] + q[3])*p[1] + y[1])**2 + (-a[0] - a[1]*torch.cos(q[0]) - a[2]*torch.cos(q[0] + q[1]) - a[3]*torch.cos(q[0] + q[1] + q[2]) + torch.sin(q[0] + q[1] + q[2] + q[3])*p[1] - torch.cos(q[0] + q[1] + q[2] + q[3])*p[0] + y[0])**2),
 0, 0, 0]])


Link 5
def p5(q, p, a):
torch.hstack([[a[0] + a[1]*torch.cos(q[0]) + a[2]*torch.cos(q[0] + q[1]) + a[3]*torch.cos(q[0] + q[1] + q[2]) + a[4]*torch.cos(q[0] + q[1] + q[2] + q[3]) - torch.sin(q[0] + q[1] + q[2] + q[3] + q[4])*p[1] + torch.cos(q[0] + q[1] + q[2] + q[3] + q[4])*p[0]],
 [a[1]*torch.sin(q[0]) + a[2]*torch.sin(q[0] + q[1]) + a[3]*torch.sin(q[0] + q[1] + q[2]) + a[4]*torch.sin(q[0] + q[1] + q[2] + q[3]) + torch.sin(q[0] + q[1] + q[2] + q[3] + q[4])*p[0] + torch.cos(q[0] + q[1] + q[2] + q[3] + q[4])*p[1]],
 [p[2]]])
def d5(q, y, p, a):
torch.sqrt((p[2] - y[2])**2 + (a[1]*torch.sin(q[0]) + a[2]*torch.sin(q[0] + q[1]) + a[3]*torch.sin(q[0] + q[1] + q[2]) + a[4]*torch.sin(q[0] + q[1] + q[2] + q[3]) + torch.sin(q[0] + q[1] + q[2] + q[3] + q[4])*p[0] + torch.cos(q[0] + q[1] + q[2] + q[3] + q[4])*p[1] - y[1])**2 + (a[0] + a[1]*torch.cos(q[0]) + a[2]*torch.cos(q[0] + q[1]) + a[3]*torch.cos(q[0] + q[1] + q[2]) + a[4]*torch.cos(q[0] + q[1] + q[2] + q[3]) - torch.sin(q[0] + q[1] + q[2] + q[3] + q[4])*p[1] + torch.cos(q[0] + q[1] + q[2] + q[3] + q[4])*p[0] - y[0])**2)
def r5(q, y, p, a):
torch.tensor([[(-a[0]*a[1]*torch.sin(q[0]) - a[0]*a[2]*torch.sin(q[0] + q[1]) - a[0]*a[3]*torch.sin(q[0] + q[1] + q[2]) - a[0]*a[4]*torch.sin(q[0] + q[1] + q[2] + q[3]) - a[0]*torch.sin(q[0] + q[1] + q[2] + q[3] + q[4])*p[0] - a[0]*torch.cos(q[0] + q[1] + q[2] + q[3] + q[4])*p[1] + a[1]*torch.sin(q[0])*y[0] - a[1]*torch.cos(q[0])*y[1] + a[2]*torch.sin(q[0] + q[1])*y[0] - a[2]*torch.cos(q[0] + q[1])*y[1] + a[3]*torch.sin(q[0] + q[1] + q[2])*y[0] - a[3]*torch.cos(q[0] + q[1] + q[2])*y[1] + a[4]*torch.sin(q[0] + q[1] + q[2] + q[3])*y[0] - a[4]*torch.cos(q[0] + q[1] + q[2] + q[3])*y[1] + torch.sin(q[0] + q[1] + q[2] + q[3] + q[4])*p[0]*y[0] + torch.sin(q[0] + q[1] + q[2] + q[3] + q[4])*p[1]*y[1] - torch.cos(q[0] + q[1] + q[2] + q[3] + q[4])*p[0]*y[1] + torch.cos(q[0] + q[1] + q[2] + q[3] + q[4])*p[1]*y[0])/torch.sqrt((p[2] - y[2])**2 + (-a[1]*torch.sin(q[0]) - a[2]*torch.sin(q[0] + q[1]) - a[3]*torch.sin(q[0] + q[1] + q[2]) - a[4]*torch.sin(q[0] + q[1] + q[2] + q[3]) - torch.sin(q[0] + q[1] + q[2] + q[3] + q[4])*p[0] - torch.cos(q[0] + q[1] + q[2] + q[3] + q[4])*p[1] + y[1])**2 + (-a[0] - a[1]*torch.cos(q[0]) - a[2]*torch.cos(q[0] + q[1]) - a[3]*torch.cos(q[0] + q[1] + q[2]) - a[4]*torch.cos(q[0] + q[1] + q[2] + q[3]) + torch.sin(q[0] + q[1] + q[2] + q[3] + q[4])*p[1] - torch.cos(q[0] + q[1] + q[2] + q[3] + q[4])*p[0] + y[0])**2),
 (-a[0]*a[2]*torch.sin(q[0] + q[1]) - a[0]*a[3]*torch.sin(q[0] + q[1] + q[2]) - a[0]*a[4]*torch.sin(q[0] + q[1] + q[2] + q[3]) - a[0]*torch.sin(q[0] + q[1] + q[2] + q[3] + q[4])*p[0] - a[0]*torch.cos(q[0] + q[1] + q[2] + q[3] + q[4])*p[1] - a[1]*a[2]*torch.sin(q[1]) - a[1]*a[3]*torch.sin(q[1] + q[2]) - a[1]*a[4]*torch.sin(q[1] + q[2] + q[3]) - a[1]*torch.sin(q[1] + q[2] + q[3] + q[4])*p[0] - a[1]*torch.cos(q[1] + q[2] + q[3] + q[4])*p[1] + a[2]*torch.sin(q[0] + q[1])*y[0] - a[2]*torch.cos(q[0] + q[1])*y[1] + a[3]*torch.sin(q[0] + q[1] + q[2])*y[0] - a[3]*torch.cos(q[0] + q[1] + q[2])*y[1] + a[4]*torch.sin(q[0] + q[1] + q[2] + q[3])*y[0] - a[4]*torch.cos(q[0] + q[1] + q[2] + q[3])*y[1] + torch.sin(q[0] + q[1] + q[2] + q[3] + q[4])*p[0]*y[0] + torch.sin(q[0] + q[1] + q[2] + q[3] + q[4])*p[1]*y[1] - torch.cos(q[0] + q[1] + q[2] + q[3] + q[4])*p[0]*y[1] + torch.cos(q[0] + q[1] + q[2] + q[3] + q[4])*p[1]*y[0])/torch.sqrt((p[2] - y[2])**2 + (-a[1]*torch.sin(q[0]) - a[2]*torch.sin(q[0] + q[1]) - a[3]*torch.sin(q[0] + q[1] + q[2]) - a[4]*torch.sin(q[0] + q[1] + q[2] + q[3]) - torch.sin(q[0] + q[1] + q[2] + q[3] + q[4])*p[0] - torch.cos(q[0] + q[1] + q[2] + q[3] + q[4])*p[1] + y[1])**2 + (-a[0] - a[1]*torch.cos(q[0]) - a[2]*torch.cos(q[0] + q[1]) - a[3]*torch.cos(q[0] + q[1] + q[2]) - a[4]*torch.cos(q[0] + q[1] + q[2] + q[3]) + torch.sin(q[0] + q[1] + q[2] + q[3] + q[4])*p[1] - torch.cos(q[0] + q[1] + q[2] + q[3] + q[4])*p[0] + y[0])**2),
 ((a[3]*torch.sin(q[0] + q[1] + q[2]) + a[4]*torch.sin(q[0] + q[1] + q[2] + q[3]) + torch.sin(q[0] + q[1] + q[2] + q[3] + q[4])*p[0] + torch.cos(q[0] + q[1] + q[2] + q[3] + q[4])*p[1])*(-a[0] - a[1]*torch.cos(q[0]) - a[2]*torch.cos(q[0] + q[1]) - a[3]*torch.cos(q[0] + q[1] + q[2]) - a[4]*torch.cos(q[0] + q[1] + q[2] + q[3]) + torch.sin(q[0] + q[1] + q[2] + q[3] + q[4])*p[1] - torch.cos(q[0] + q[1] + q[2] + q[3] + q[4])*p[0] + y[0]) + (-a[3]*torch.cos(q[0] + q[1] + q[2]) - a[4]*torch.cos(q[0] + q[1] + q[2] + q[3]) + torch.sin(q[0] + q[1] + q[2] + q[3] + q[4])*p[1] - torch.cos(q[0] + q[1] + q[2] + q[3] + q[4])*p[0])*(-a[1]*torch.sin(q[0]) - a[2]*torch.sin(q[0] + q[1]) - a[3]*torch.sin(q[0] + q[1] + q[2]) - a[4]*torch.sin(q[0] + q[1] + q[2] + q[3]) - torch.sin(q[0] + q[1] + q[2] + q[3] + q[4])*p[0] - torch.cos(q[0] + q[1] + q[2] + q[3] + q[4])*p[1] + y[1]))/torch.sqrt((p[2] - y[2])**2 + (-a[1]*torch.sin(q[0]) - a[2]*torch.sin(q[0] + q[1]) - a[3]*torch.sin(q[0] + q[1] + q[2]) - a[4]*torch.sin(q[0] + q[1] + q[2] + q[3]) - torch.sin(q[0] + q[1] + q[2] + q[3] + q[4])*p[0] - torch.cos(q[0] + q[1] + q[2] + q[3] + q[4])*p[1] + y[1])**2 + (-a[0] - a[1]*torch.cos(q[0]) - a[2]*torch.cos(q[0] + q[1]) - a[3]*torch.cos(q[0] + q[1] + q[2]) - a[4]*torch.cos(q[0] + q[1] + q[2] + q[3]) + torch.sin(q[0] + q[1] + q[2] + q[3] + q[4])*p[1] - torch.cos(q[0] + q[1] + q[2] + q[3] + q[4])*p[0] + y[0])**2),
 ((a[4]*torch.sin(q[0] + q[1] + q[2] + q[3]) + torch.sin(q[0] + q[1] + q[2] + q[3] + q[4])*p[0] + torch.cos(q[0] + q[1] + q[2] + q[3] + q[4])*p[1])*(-a[0] - a[1]*torch.cos(q[0]) - a[2]*torch.cos(q[0] + q[1]) - a[3]*torch.cos(q[0] + q[1] + q[2]) - a[4]*torch.cos(q[0] + q[1] + q[2] + q[3]) + torch.sin(q[0] + q[1] + q[2] + q[3] + q[4])*p[1] - torch.cos(q[0] + q[1] + q[2] + q[3] + q[4])*p[0] + y[0]) + (-a[4]*torch.cos(q[0] + q[1] + q[2] + q[3]) + torch.sin(q[0] + q[1] + q[2] + q[3] + q[4])*p[1] - torch.cos(q[0] + q[1] + q[2] + q[3] + q[4])*p[0])*(-a[1]*torch.sin(q[0]) - a[2]*torch.sin(q[0] + q[1]) - a[3]*torch.sin(q[0] + q[1] + q[2]) - a[4]*torch.sin(q[0] + q[1] + q[2] + q[3]) - torch.sin(q[0] + q[1] + q[2] + q[3] + q[4])*p[0] - torch.cos(q[0] + q[1] + q[2] + q[3] + q[4])*p[1] + y[1]))/torch.sqrt((p[2] - y[2])**2 + (-a[1]*torch.sin(q[0]) - a[2]*torch.sin(q[0] + q[1]) - a[3]*torch.sin(q[0] + q[1] + q[2]) - a[4]*torch.sin(q[0] + q[1] + q[2] + q[3]) - torch.sin(q[0] + q[1] + q[2] + q[3] + q[4])*p[0] - torch.cos(q[0] + q[1] + q[2] + q[3] + q[4])*p[1] + y[1])**2 + (-a[0] - a[1]*torch.cos(q[0]) - a[2]*torch.cos(q[0] + q[1]) - a[3]*torch.cos(q[0] + q[1] + q[2]) - a[4]*torch.cos(q[0] + q[1] + q[2] + q[3]) + torch.sin(q[0] + q[1] + q[2] + q[3] + q[4])*p[1] - torch.cos(q[0] + q[1] + q[2] + q[3] + q[4])*p[0] + y[0])**2),
 (-a[0]*torch.sin(q[0] + q[1] + q[2] + q[3] + q[4])*p[0] - a[0]*torch.cos(q[0] + q[1] + q[2] + q[3] + q[4])*p[1] - a[1]*torch.sin(q[1] + q[2] + q[3] + q[4])*p[0] - a[1]*torch.cos(q[1] + q[2] + q[3] + q[4])*p[1] - a[2]*torch.sin(q[2] + q[3] + q[4])*p[0] - a[2]*torch.cos(q[2] + q[3] + q[4])*p[1] - a[3]*torch.sin(q[3] + q[4])*p[0] - a[3]*torch.cos(q[3] + q[4])*p[1] - a[4]*torch.sin(q[4])*p[0] - a[4]*torch.cos(q[4])*p[1] + torch.sin(q[0] + q[1] + q[2] + q[3] + q[4])*p[0]*y[0] + torch.sin(q[0] + q[1] + q[2] + q[3] + q[4])*p[1]*y[1] - torch.cos(q[0] + q[1] + q[2] + q[3] + q[4])*p[0]*y[1] + torch.cos(q[0] + q[1] + q[2] + q[3] + q[4])*p[1]*y[0])/torch.sqrt((p[2] - y[2])**2 + (-a[1]*torch.sin(q[0]) - a[2]*torch.sin(q[0] + q[1]) - a[3]*torch.sin(q[0] + q[1] + q[2]) - a[4]*torch.sin(q[0] + q[1] + q[2] + q[3]) - torch.sin(q[0] + q[1] + q[2] + q[3] + q[4])*p[0] - torch.cos(q[0] + q[1] + q[2] + q[3] + q[4])*p[1] + y[1])**2 + (-a[0] - a[1]*torch.cos(q[0]) - a[2]*torch.cos(q[0] + q[1]) - a[3]*torch.cos(q[0] + q[1] + q[2]) - a[4]*torch.cos(q[0] + q[1] + q[2] + q[3]) + torch.sin(q[0] + q[1] + q[2] + q[3] + q[4])*p[1] - torch.cos(q[0] + q[1] + q[2] + q[3] + q[4])*p[0] + y[0])**2),
 0, 0]])


Link 6
def p6(q, p, a):
torch.tensor([[a[0] + a[1]*torch.cos(q[0]) + a[2]*torch.cos(q[0] + q[1]) + a[3]*torch.cos(q[0] + q[1] + q[2]) + a[4]*torch.cos(q[0] + q[1] + q[2] + q[3]) + a[5]*torch.cos(q[0] + q[1] + q[2] + q[3] + q[4]) - torch.sin(q[0] + q[1] + q[2] + q[3] + q[4] + q[5])*p[1] + torch.cos(q[0] + q[1] + q[2] + q[3] + q[4] + q[5])*p[0]],
 [a[1]*torch.sin(q[0]) + a[2]*torch.sin(q[0] + q[1]) + a[3]*torch.sin(q[0] + q[1] + q[2]) + a[4]*torch.sin(q[0] + q[1] + q[2] + q[3]) + a[5]*torch.sin(q[0] + q[1] + q[2] + q[3] + q[4]) + torch.sin(q[0] + q[1] + q[2] + q[3] + q[4] + q[5])*p[0] + torch.cos(q[0] + q[1] + q[2] + q[3] + q[4] + q[5])*p[1]],
 [p[2]]])
def d6(q, y, p, a):
torch.sqrt((p[2] - y[2])**2 + (a[1]*torch.sin(q[0]) + a[2]*torch.sin(q[0] + q[1]) + a[3]*torch.sin(q[0] + q[1] + q[2]) + a[4]*torch.sin(q[0] + q[1] + q[2] + q[3]) + a[5]*torch.sin(q[0] + q[1] + q[2] + q[3] + q[4]) + torch.sin(q[0] + q[1] + q[2] + q[3] + q[4] + q[5])*p[0] + torch.cos(q[0] + q[1] + q[2] + q[3] + q[4] + q[5])*p[1] - y[1])**2 + (a[0] + a[1]*torch.cos(q[0]) + a[2]*torch.cos(q[0] + q[1]) + a[3]*torch.cos(q[0] + q[1] + q[2]) + a[4]*torch.cos(q[0] + q[1] + q[2] + q[3]) + a[5]*torch.cos(q[0] + q[1] + q[2] + q[3] + q[4]) - torch.sin(q[0] + q[1] + q[2] + q[3] + q[4] + q[5])*p[1] + torch.cos(q[0] + q[1] + q[2] + q[3] + q[4] + q[5])*p[0] - y[0])**2)
def r6(q, y, p, a):
torch.tensor([[(-a[0]*a[1]*torch.sin(q[0]) - a[0]*a[2]*torch.sin(q[0] + q[1]) - a[0]*a[3]*torch.sin(q[0] + q[1] + q[2]) - a[0]*a[4]*torch.sin(q[0] + q[1] + q[2] + q[3]) - a[0]*a[5]*torch.sin(q[0] + q[1] + q[2] + q[3] + q[4]) - a[0]*torch.sin(q[0] + q[1] + q[2] + q[3] + q[4] + q[5])*p[0] - a[0]*torch.cos(q[0] + q[1] + q[2] + q[3] + q[4] + q[5])*p[1] + a[1]*torch.sin(q[0])*y[0] - a[1]*torch.cos(q[0])*y[1] + a[2]*torch.sin(q[0] + q[1])*y[0] - a[2]*torch.cos(q[0] + q[1])*y[1] + a[3]*torch.sin(q[0] + q[1] + q[2])*y[0] - a[3]*torch.cos(q[0] + q[1] + q[2])*y[1] + a[4]*torch.sin(q[0] + q[1] + q[2] + q[3])*y[0] - a[4]*torch.cos(q[0] + q[1] + q[2] + q[3])*y[1] + a[5]*torch.sin(q[0] + q[1] + q[2] + q[3] + q[4])*y[0] - a[5]*torch.cos(q[0] + q[1] + q[2] + q[3] + q[4])*y[1] + torch.sin(q[0] + q[1] + q[2] + q[3] + q[4] + q[5])*p[0]*y[0] + torch.sin(q[0] + q[1] + q[2] + q[3] + q[4] + q[5])*p[1]*y[1] - torch.cos(q[0] + q[1] + q[2] + q[3] + q[4] + q[5])*p[0]*y[1] + torch.cos(q[0] + q[1] + q[2] + q[3] + q[4] + q[5])*p[1]*y[0])/torch.sqrt((p[2] - y[2])**2 + (-a[1]*torch.sin(q[0]) - a[2]*torch.sin(q[0] + q[1]) - a[3]*torch.sin(q[0] + q[1] + q[2]) - a[4]*torch.sin(q[0] + q[1] + q[2] + q[3]) - a[5]*torch.sin(q[0] + q[1] + q[2] + q[3] + q[4]) - torch.sin(q[0] + q[1] + q[2] + q[3] + q[4] + q[5])*p[0] - torch.cos(q[0] + q[1] + q[2] + q[3] + q[4] + q[5])*p[1] + y[1])**2 + (-a[0] - a[1]*torch.cos(q[0]) - a[2]*torch.cos(q[0] + q[1]) - a[3]*torch.cos(q[0] + q[1] + q[2]) - a[4]*torch.cos(q[0] + q[1] + q[2] + q[3]) - a[5]*torch.cos(q[0] + q[1] + q[2] + q[3] + q[4]) + torch.sin(q[0] + q[1] + q[2] + q[3] + q[4] + q[5])*p[1] - torch.cos(q[0] + q[1] + q[2] + q[3] + q[4] + q[5])*p[0] + y[0])**2),
 (-a[0]*a[2]*torch.sin(q[0] + q[1]) - a[0]*a[3]*torch.sin(q[0] + q[1] + q[2]) - a[0]*a[4]*torch.sin(q[0] + q[1] + q[2] + q[3]) - a[0]*a[5]*torch.sin(q[0] + q[1] + q[2] + q[3] + q[4]) - a[0]*torch.sin(q[0] + q[1] + q[2] + q[3] + q[4] + q[5])*p[0] - a[0]*torch.cos(q[0] + q[1] + q[2] + q[3] + q[4] + q[5])*p[1] - a[1]*a[2]*torch.sin(q[1]) - a[1]*a[3]*torch.sin(q[1] + q[2]) - a[1]*a[4]*torch.sin(q[1] + q[2] + q[3]) - a[1]*a[5]*torch.sin(q[1] + q[2] + q[3] + q[4]) - a[1]*torch.sin(q[1] + q[2] + q[3] + q[4] + q[5])*p[0] - a[1]*torch.cos(q[1] + q[2] + q[3] + q[4] + q[5])*p[1] + a[2]*torch.sin(q[0] + q[1])*y[0] - a[2]*torch.cos(q[0] + q[1])*y[1] + a[3]*torch.sin(q[0] + q[1] + q[2])*y[0] - a[3]*torch.cos(q[0] + q[1] + q[2])*y[1] + a[4]*torch.sin(q[0] + q[1] + q[2] + q[3])*y[0] - a[4]*torch.cos(q[0] + q[1] + q[2] + q[3])*y[1] + a[5]*torch.sin(q[0] + q[1] + q[2] + q[3] + q[4])*y[0] - a[5]*torch.cos(q[0] + q[1] + q[2] + q[3] + q[4])*y[1] + torch.sin(q[0] + q[1] + q[2] + q[3] + q[4] + q[5])*p[0]*y[0] + torch.sin(q[0] + q[1] + q[2] + q[3] + q[4] + q[5])*p[1]*y[1] - torch.cos(q[0] + q[1] + q[2] + q[3] + q[4] + q[5])*p[0]*y[1] + torch.cos(q[0] + q[1] + q[2] + q[3] + q[4] + q[5])*p[1]*y[0])/torch.sqrt((p[2] - y[2])**2 + (-a[1]*torch.sin(q[0]) - a[2]*torch.sin(q[0] + q[1]) - a[3]*torch.sin(q[0] + q[1] + q[2]) - a[4]*torch.sin(q[0] + q[1] + q[2] + q[3]) - a[5]*torch.sin(q[0] + q[1] + q[2] + q[3] + q[4]) - torch.sin(q[0] + q[1] + q[2] + q[3] + q[4] + q[5])*p[0] - torch.cos(q[0] + q[1] + q[2] + q[3] + q[4] + q[5])*p[1] + y[1])**2 + (-a[0] - a[1]*torch.cos(q[0]) - a[2]*torch.cos(q[0] + q[1]) - a[3]*torch.cos(q[0] + q[1] + q[2]) - a[4]*torch.cos(q[0] + q[1] + q[2] + q[3]) - a[5]*torch.cos(q[0] + q[1] + q[2] + q[3] + q[4]) + torch.sin(q[0] + q[1] + q[2] + q[3] + q[4] + q[5])*p[1] - torch.cos(q[0] + q[1] + q[2] + q[3] + q[4] + q[5])*p[0] + y[0])**2),
 ((a[3]*torch.sin(q[0] + q[1] + q[2]) + a[4]*torch.sin(q[0] + q[1] + q[2] + q[3]) + a[5]*torch.sin(q[0] + q[1] + q[2] + q[3] + q[4]) + torch.sin(q[0] + q[1] + q[2] + q[3] + q[4] + q[5])*p[0] + torch.cos(q[0] + q[1] + q[2] + q[3] + q[4] + q[5])*p[1])*(-a[0] - a[1]*torch.cos(q[0]) - a[2]*torch.cos(q[0] + q[1]) - a[3]*torch.cos(q[0] + q[1] + q[2]) - a[4]*torch.cos(q[0] + q[1] + q[2] + q[3]) - a[5]*torch.cos(q[0] + q[1] + q[2] + q[3] + q[4]) + torch.sin(q[0] + q[1] + q[2] + q[3] + q[4] + q[5])*p[1] - torch.cos(q[0] + q[1] + q[2] + q[3] + q[4] + q[5])*p[0] + y[0]) + (-a[3]*torch.cos(q[0] + q[1] + q[2]) - a[4]*torch.cos(q[0] + q[1] + q[2] + q[3]) - a[5]*torch.cos(q[0] + q[1] + q[2] + q[3] + q[4]) + torch.sin(q[0] + q[1] + q[2] + q[3] + q[4] + q[5])*p[1] - torch.cos(q[0] + q[1] + q[2] + q[3] + q[4] + q[5])*p[0])*(-a[1]*torch.sin(q[0]) - a[2]*torch.sin(q[0] + q[1]) - a[3]*torch.sin(q[0] + q[1] + q[2]) - a[4]*torch.sin(q[0] + q[1] + q[2] + q[3]) - a[5]*torch.sin(q[0] + q[1] + q[2] + q[3] + q[4]) - torch.sin(q[0] + q[1] + q[2] + q[3] + q[4] + q[5])*p[0] - torch.cos(q[0] + q[1] + q[2] + q[3] + q[4] + q[5])*p[1] + y[1]))/torch.sqrt((p[2] - y[2])**2 + (-a[1]*torch.sin(q[0]) - a[2]*torch.sin(q[0] + q[1]) - a[3]*torch.sin(q[0] + q[1] + q[2]) - a[4]*torch.sin(q[0] + q[1] + q[2] + q[3]) - a[5]*torch.sin(q[0] + q[1] + q[2] + q[3] + q[4]) - torch.sin(q[0] + q[1] + q[2] + q[3] + q[4] + q[5])*p[0] - torch.cos(q[0] + q[1] + q[2] + q[3] + q[4] + q[5])*p[1] + y[1])**2 + (-a[0] - a[1]*torch.cos(q[0]) - a[2]*torch.cos(q[0] + q[1]) - a[3]*torch.cos(q[0] + q[1] + q[2]) - a[4]*torch.cos(q[0] + q[1] + q[2] + q[3]) - a[5]*torch.cos(q[0] + q[1] + q[2] + q[3] + q[4]) + torch.sin(q[0] + q[1] + q[2] + q[3] + q[4] + q[5])*p[1] - torch.cos(q[0] + q[1] + q[2] + q[3] + q[4] + q[5])*p[0] + y[0])**2),
 ((a[4]*torch.sin(q[0] + q[1] + q[2] + q[3]) + a[5]*torch.sin(q[0] + q[1] + q[2] + q[3] + q[4]) + torch.sin(q[0] + q[1] + q[2] + q[3] + q[4] + q[5])*p[0] + torch.cos(q[0] + q[1] + q[2] + q[3] + q[4] + q[5])*p[1])*(-a[0] - a[1]*torch.cos(q[0]) - a[2]*torch.cos(q[0] + q[1]) - a[3]*torch.cos(q[0] + q[1] + q[2]) - a[4]*torch.cos(q[0] + q[1] + q[2] + q[3]) - a[5]*torch.cos(q[0] + q[1] + q[2] + q[3] + q[4]) + torch.sin(q[0] + q[1] + q[2] + q[3] + q[4] + q[5])*p[1] - torch.cos(q[0] + q[1] + q[2] + q[3] + q[4] + q[5])*p[0] + y[0]) + (-a[4]*torch.cos(q[0] + q[1] + q[2] + q[3]) - a[5]*torch.cos(q[0] + q[1] + q[2] + q[3] + q[4]) + torch.sin(q[0] + q[1] + q[2] + q[3] + q[4] + q[5])*p[1] - torch.cos(q[0] + q[1] + q[2] + q[3] + q[4] + q[5])*p[0])*(-a[1]*torch.sin(q[0]) - a[2]*torch.sin(q[0] + q[1]) - a[3]*torch.sin(q[0] + q[1] + q[2]) - a[4]*torch.sin(q[0] + q[1] + q[2] + q[3]) - a[5]*torch.sin(q[0] + q[1] + q[2] + q[3] + q[4]) - torch.sin(q[0] + q[1] + q[2] + q[3] + q[4] + q[5])*p[0] - torch.cos(q[0] + q[1] + q[2] + q[3] + q[4] + q[5])*p[1] + y[1]))/torch.sqrt((p[2] - y[2])**2 + (-a[1]*torch.sin(q[0]) - a[2]*torch.sin(q[0] + q[1]) - a[3]*torch.sin(q[0] + q[1] + q[2]) - a[4]*torch.sin(q[0] + q[1] + q[2] + q[3]) - a[5]*torch.sin(q[0] + q[1] + q[2] + q[3] + q[4]) - torch.sin(q[0] + q[1] + q[2] + q[3] + q[4] + q[5])*p[0] - torch.cos(q[0] + q[1] + q[2] + q[3] + q[4] + q[5])*p[1] + y[1])**2 + (-a[0] - a[1]*torch.cos(q[0]) - a[2]*torch.cos(q[0] + q[1]) - a[3]*torch.cos(q[0] + q[1] + q[2]) - a[4]*torch.cos(q[0] + q[1] + q[2] + q[3]) - a[5]*torch.cos(q[0] + q[1] + q[2] + q[3] + q[4]) + torch.sin(q[0] + q[1] + q[2] + q[3] + q[4] + q[5])*p[1] - torch.cos(q[0] + q[1] + q[2] + q[3] + q[4] + q[5])*p[0] + y[0])**2),
 ((a[5]*torch.sin(q[0] + q[1] + q[2] + q[3] + q[4]) + torch.sin(q[0] + q[1] + q[2] + q[3] + q[4] + q[5])*p[0] + torch.cos(q[0] + q[1] + q[2] + q[3] + q[4] + q[5])*p[1])*(-a[0] - a[1]*torch.cos(q[0]) - a[2]*torch.cos(q[0] + q[1]) - a[3]*torch.cos(q[0] + q[1] + q[2]) - a[4]*torch.cos(q[0] + q[1] + q[2] + q[3]) - a[5]*torch.cos(q[0] + q[1] + q[2] + q[3] + q[4]) + torch.sin(q[0] + q[1] + q[2] + q[3] + q[4] + q[5])*p[1] - torch.cos(q[0] + q[1] + q[2] + q[3] + q[4] + q[5])*p[0] + y[0]) + (-a[5]*torch.cos(q[0] + q[1] + q[2] + q[3] + q[4]) + torch.sin(q[0] + q[1] + q[2] + q[3] + q[4] + q[5])*p[1] - torch.cos(q[0] + q[1] + q[2] + q[3] + q[4] + q[5])*p[0])*(-a[1]*torch.sin(q[0]) - a[2]*torch.sin(q[0] + q[1]) - a[3]*torch.sin(q[0] + q[1] + q[2]) - a[4]*torch.sin(q[0] + q[1] + q[2] + q[3]) - a[5]*torch.sin(q[0] + q[1] + q[2] + q[3] + q[4]) - torch.sin(q[0] + q[1] + q[2] + q[3] + q[4] + q[5])*p[0] - torch.cos(q[0] + q[1] + q[2] + q[3] + q[4] + q[5])*p[1] + y[1]))/torch.sqrt((p[2] - y[2])**2 + (-a[1]*torch.sin(q[0]) - a[2]*torch.sin(q[0] + q[1]) - a[3]*torch.sin(q[0] + q[1] + q[2]) - a[4]*torch.sin(q[0] + q[1] + q[2] + q[3]) - a[5]*torch.sin(q[0] + q[1] + q[2] + q[3] + q[4]) - torch.sin(q[0] + q[1] + q[2] + q[3] + q[4] + q[5])*p[0] - torch.cos(q[0] + q[1] + q[2] + q[3] + q[4] + q[5])*p[1] + y[1])**2 + (-a[0] - a[1]*torch.cos(q[0]) - a[2]*torch.cos(q[0] + q[1]) - a[3]*torch.cos(q[0] + q[1] + q[2]) - a[4]*torch.cos(q[0] + q[1] + q[2] + q[3]) - a[5]*torch.cos(q[0] + q[1] + q[2] + q[3] + q[4]) + torch.sin(q[0] + q[1] + q[2] + q[3] + q[4] + q[5])*p[1] - torch.cos(q[0] + q[1] + q[2] + q[3] + q[4] + q[5])*p[0] + y[0])**2),
 (-a[0]*torch.sin(q[0] + q[1] + q[2] + q[3] + q[4] + q[5])*p[0] - a[0]*torch.cos(q[0] + q[1] + q[2] + q[3] + q[4] + q[5])*p[1] - a[1]*torch.sin(q[1] + q[2] + q[3] + q[4] + q[5])*p[0] - a[1]*torch.cos(q[1] + q[2] + q[3] + q[4] + q[5])*p[1] - a[2]*torch.sin(q[2] + q[3] + q[4] + q[5])*p[0] - a[2]*torch.cos(q[2] + q[3] + q[4] + q[5])*p[1] - a[3]*torch.sin(q[3] + q[4] + q[5])*p[0] - a[3]*torch.cos(q[3] + q[4] + q[5])*p[1] - a[4]*torch.sin(q[4] + q[5])*p[0] - a[4]*torch.cos(q[4] + q[5])*p[1] - a[5]*torch.sin(q[5])*p[0] - a[5]*torch.cos(q[5])*p[1] + torch.sin(q[0] + q[1] + q[2] + q[3] + q[4] + q[5])*p[0]*y[0] + torch.sin(q[0] + q[1] + q[2] + q[3] + q[4] + q[5])*p[1]*y[1] - torch.cos(q[0] + q[1] + q[2] + q[3] + q[4] + q[5])*p[0]*y[1] + torch.cos(q[0] + q[1] + q[2] + q[3] + q[4] + q[5])*p[1]*y[0])/torch.sqrt((p[2] - y[2])**2 + (-a[1]*torch.sin(q[0]) - a[2]*torch.sin(q[0] + q[1]) - a[3]*torch.sin(q[0] + q[1] + q[2]) - a[4]*torch.sin(q[0] + q[1] + q[2] + q[3]) - a[5]*torch.sin(q[0] + q[1] + q[2] + q[3] + q[4]) - torch.sin(q[0] + q[1] + q[2] + q[3] + q[4] + q[5])*p[0] - torch.cos(q[0] + q[1] + q[2] + q[3] + q[4] + q[5])*p[1] + y[1])**2 + (-a[0] - a[1]*torch.cos(q[0]) - a[2]*torch.cos(q[0] + q[1]) - a[3]*torch.cos(q[0] + q[1] + q[2]) - a[4]*torch.cos(q[0] + q[1] + q[2] + q[3]) - a[5]*torch.cos(q[0] + q[1] + q[2] + q[3] + q[4]) + torch.sin(q[0] + q[1] + q[2] + q[3] + q[4] + q[5])*p[1] - torch.cos(q[0] + q[1] + q[2] + q[3] + q[4] + q[5])*p[0] + y[0])**2),
 0]])


Link 7
def p7(q, p, a):
torch.tensor([[a[0] + a[1]*torch.cos(q[0]) + a[2]*torch.cos(q[0] + q[1]) + a[3]*torch.cos(q[0] + q[1] + q[2]) + a[4]*torch.cos(q[0] + q[1] + q[2] + q[3]) + a[5]*torch.cos(q[0] + q[1] + q[2] + q[3] + q[4]) + a[6]*torch.cos(q[0] + q[1] + q[2] + q[3] + q[4] + q[5]) - torch.sin(q[0] + q[1] + q[2] + q[3] + q[4] + q[5] + q[6])*p[1] + torch.cos(q[0] + q[1] + q[2] + q[3] + q[4] + q[5] + q[6])*p[0]],
 [a[1]*torch.sin(q[0]) + a[2]*torch.sin(q[0] + q[1]) + a[3]*torch.sin(q[0] + q[1] + q[2]) + a[4]*torch.sin(q[0] + q[1] + q[2] + q[3]) + a[5]*torch.sin(q[0] + q[1] + q[2] + q[3] + q[4]) + a[6]*torch.sin(q[0] + q[1] + q[2] + q[3] + q[4] + q[5]) + torch.sin(q[0] + q[1] + q[2] + q[3] + q[4] + q[5] + q[6])*p[0] + torch.cos(q[0] + q[1] + q[2] + q[3] + q[4] + q[5] + q[6])*p[1]],
 [p[2]]])
def d7(q, y, p, a):
torch.sqrt((p[2] - y[2])**2 + (a[1]*torch.sin(q[0]) + a[2]*torch.sin(q[0] + q[1]) + a[3]*torch.sin(q[0] + q[1] + q[2]) + a[4]*torch.sin(q[0] + q[1] + q[2] + q[3]) + a[5]*torch.sin(q[0] + q[1] + q[2] + q[3] + q[4]) + a[6]*torch.sin(q[0] + q[1] + q[2] + q[3] + q[4] + q[5]) + torch.sin(q[0] + q[1] + q[2] + q[3] + q[4] + q[5] + q[6])*p[0] + torch.cos(q[0] + q[1] + q[2] + q[3] + q[4] + q[5] + q[6])*p[1] - y[1])**2 + (a[0] + a[1]*torch.cos(q[0]) + a[2]*torch.cos(q[0] + q[1]) + a[3]*torch.cos(q[0] + q[1] + q[2]) + a[4]*torch.cos(q[0] + q[1] + q[2] + q[3]) + a[5]*torch.cos(q[0] + q[1] + q[2] + q[3] + q[4]) + a[6]*torch.cos(q[0] + q[1] + q[2] + q[3] + q[4] + q[5]) - torch.sin(q[0] + q[1] + q[2] + q[3] + q[4] + q[5] + q[6])*p[1] + torch.cos(q[0] + q[1] + q[2] + q[3] + q[4] + q[5] + q[6])*p[0] - y[0])**2)
def r7(q, y, p, a):
torch.tensor([[(-a[0]*a[1]*torch.sin(q[0]) - a[0]*a[2]*torch.sin(q[0] + q[1]) - a[0]*a[3]*torch.sin(q[0] + q[1] + q[2]) - a[0]*a[4]*torch.sin(q[0] + q[1] + q[2] + q[3]) - a[0]*a[5]*torch.sin(q[0] + q[1] + q[2] + q[3] + q[4]) - a[0]*a[6]*torch.sin(q[0] + q[1] + q[2] + q[3] + q[4] + q[5]) - a[0]*torch.sin(q[0] + q[1] + q[2] + q[3] + q[4] + q[5] + q[6])*p[0] - a[0]*torch.cos(q[0] + q[1] + q[2] + q[3] + q[4] + q[5] + q[6])*p[1] + a[1]*torch.sin(q[0])*y[0] - a[1]*torch.cos(q[0])*y[1] + a[2]*torch.sin(q[0] + q[1])*y[0] - a[2]*torch.cos(q[0] + q[1])*y[1] + a[3]*torch.sin(q[0] + q[1] + q[2])*y[0] - a[3]*torch.cos(q[0] + q[1] + q[2])*y[1] + a[4]*torch.sin(q[0] + q[1] + q[2] + q[3])*y[0] - a[4]*torch.cos(q[0] + q[1] + q[2] + q[3])*y[1] + a[5]*torch.sin(q[0] + q[1] + q[2] + q[3] + q[4])*y[0] - a[5]*torch.cos(q[0] + q[1] + q[2] + q[3] + q[4])*y[1] + a[6]*torch.sin(q[0] + q[1] + q[2] + q[3] + q[4] + q[5])*y[0] - a[6]*torch.cos(q[0] + q[1] + q[2] + q[3] + q[4] + q[5])*y[1] + torch.sin(q[0] + q[1] + q[2] + q[3] + q[4] + q[5] + q[6])*p[0]*y[0] + torch.sin(q[0] + q[1] + q[2] + q[3] + q[4] + q[5] + q[6])*p[1]*y[1] - torch.cos(q[0] + q[1] + q[2] + q[3] + q[4] + q[5] + q[6])*p[0]*y[1] + torch.cos(q[0] + q[1] + q[2] + q[3] + q[4] + q[5] + q[6])*p[1]*y[0])/torch.sqrt((p[2] - y[2])**2 + (-a[1]*torch.sin(q[0]) - a[2]*torch.sin(q[0] + q[1]) - a[3]*torch.sin(q[0] + q[1] + q[2]) - a[4]*torch.sin(q[0] + q[1] + q[2] + q[3]) - a[5]*torch.sin(q[0] + q[1] + q[2] + q[3] + q[4]) - a[6]*torch.sin(q[0] + q[1] + q[2] + q[3] + q[4] + q[5]) - torch.sin(q[0] + q[1] + q[2] + q[3] + q[4] + q[5] + q[6])*p[0] - torch.cos(q[0] + q[1] + q[2] + q[3] + q[4] + q[5] + q[6])*p[1] + y[1])**2 + (-a[0] - a[1]*torch.cos(q[0]) - a[2]*torch.cos(q[0] + q[1]) - a[3]*torch.cos(q[0] + q[1] + q[2]) - a[4]*torch.cos(q[0] + q[1] + q[2] + q[3]) - a[5]*torch.cos(q[0] + q[1] + q[2] + q[3] + q[4]) - a[6]*torch.cos(q[0] + q[1] + q[2] + q[3] + q[4] + q[5]) + torch.sin(q[0] + q[1] + q[2] + q[3] + q[4] + q[5] + q[6])*p[1] - torch.cos(q[0] + q[1] + q[2] + q[3] + q[4] + q[5] + q[6])*p[0] + y[0])**2),
 (-a[0]*a[2]*torch.sin(q[0] + q[1]) - a[0]*a[3]*torch.sin(q[0] + q[1] + q[2]) - a[0]*a[4]*torch.sin(q[0] + q[1] + q[2] + q[3]) - a[0]*a[5]*torch.sin(q[0] + q[1] + q[2] + q[3] + q[4]) - a[0]*a[6]*torch.sin(q[0] + q[1] + q[2] + q[3] + q[4] + q[5]) - a[0]*torch.sin(q[0] + q[1] + q[2] + q[3] + q[4] + q[5] + q[6])*p[0] - a[0]*torch.cos(q[0] + q[1] + q[2] + q[3] + q[4] + q[5] + q[6])*p[1] - a[1]*a[2]*torch.sin(q[1]) - a[1]*a[3]*torch.sin(q[1] + q[2]) - a[1]*a[4]*torch.sin(q[1] + q[2] + q[3]) - a[1]*a[5]*torch.sin(q[1] + q[2] + q[3] + q[4]) - a[1]*a[6]*torch.sin(q[1] + q[2] + q[3] + q[4] + q[5]) - a[1]*torch.sin(q[1] + q[2] + q[3] + q[4] + q[5] + q[6])*p[0] - a[1]*torch.cos(q[1] + q[2] + q[3] + q[4] + q[5] + q[6])*p[1] + a[2]*torch.sin(q[0] + q[1])*y[0] - a[2]*torch.cos(q[0] + q[1])*y[1] + a[3]*torch.sin(q[0] + q[1] + q[2])*y[0] - a[3]*torch.cos(q[0] + q[1] + q[2])*y[1] + a[4]*torch.sin(q[0] + q[1] + q[2] + q[3])*y[0] - a[4]*torch.cos(q[0] + q[1] + q[2] + q[3])*y[1] + a[5]*torch.sin(q[0] + q[1] + q[2] + q[3] + q[4])*y[0] - a[5]*torch.cos(q[0] + q[1] + q[2] + q[3] + q[4])*y[1] + a[6]*torch.sin(q[0] + q[1] + q[2] + q[3] + q[4] + q[5])*y[0] - a[6]*torch.cos(q[0] + q[1] + q[2] + q[3] + q[4] + q[5])*y[1] + torch.sin(q[0] + q[1] + q[2] + q[3] + q[4] + q[5] + q[6])*p[0]*y[0] + torch.sin(q[0] + q[1] + q[2] + q[3] + q[4] + q[5] + q[6])*p[1]*y[1] - torch.cos(q[0] + q[1] + q[2] + q[3] + q[4] + q[5] + q[6])*p[0]*y[1] + torch.cos(q[0] + q[1] + q[2] + q[3] + q[4] + q[5] + q[6])*p[1]*y[0])/torch.sqrt((p[2] - y[2])**2 + (-a[1]*torch.sin(q[0]) - a[2]*torch.sin(q[0] + q[1]) - a[3]*torch.sin(q[0] + q[1] + q[2]) - a[4]*torch.sin(q[0] + q[1] + q[2] + q[3]) - a[5]*torch.sin(q[0] + q[1] + q[2] + q[3] + q[4]) - a[6]*torch.sin(q[0] + q[1] + q[2] + q[3] + q[4] + q[5]) - torch.sin(q[0] + q[1] + q[2] + q[3] + q[4] + q[5] + q[6])*p[0] - torch.cos(q[0] + q[1] + q[2] + q[3] + q[4] + q[5] + q[6])*p[1] + y[1])**2 + (-a[0] - a[1]*torch.cos(q[0]) - a[2]*torch.cos(q[0] + q[1]) - a[3]*torch.cos(q[0] + q[1] + q[2]) - a[4]*torch.cos(q[0] + q[1] + q[2] + q[3]) - a[5]*torch.cos(q[0] + q[1] + q[2] + q[3] + q[4]) - a[6]*torch.cos(q[0] + q[1] + q[2] + q[3] + q[4] + q[5]) + torch.sin(q[0] + q[1] + q[2] + q[3] + q[4] + q[5] + q[6])*p[1] - torch.cos(q[0] + q[1] + q[2] + q[3] + q[4] + q[5] + q[6])*p[0] + y[0])**2),
 ((a[3]*torch.sin(q[0] + q[1] + q[2]) + a[4]*torch.sin(q[0] + q[1] + q[2] + q[3]) + a[5]*torch.sin(q[0] + q[1] + q[2] + q[3] + q[4]) + a[6]*torch.sin(q[0] + q[1] + q[2] + q[3] + q[4] + q[5]) + torch.sin(q[0] + q[1] + q[2] + q[3] + q[4] + q[5] + q[6])*p[0] + torch.cos(q[0] + q[1] + q[2] + q[3] + q[4] + q[5] + q[6])*p[1])*(-a[0] - a[1]*torch.cos(q[0]) - a[2]*torch.cos(q[0] + q[1]) - a[3]*torch.cos(q[0] + q[1] + q[2]) - a[4]*torch.cos(q[0] + q[1] + q[2] + q[3]) - a[5]*torch.cos(q[0] + q[1] + q[2] + q[3] + q[4]) - a[6]*torch.cos(q[0] + q[1] + q[2] + q[3] + q[4] + q[5]) + torch.sin(q[0] + q[1] + q[2] + q[3] + q[4] + q[5] + q[6])*p[1] - torch.cos(q[0] + q[1] + q[2] + q[3] + q[4] + q[5] + q[6])*p[0] + y[0]) + (-a[3]*torch.cos(q[0] + q[1] + q[2]) - a[4]*torch.cos(q[0] + q[1] + q[2] + q[3]) - a[5]*torch.cos(q[0] + q[1] + q[2] + q[3] + q[4]) - a[6]*torch.cos(q[0] + q[1] + q[2] + q[3] + q[4] + q[5]) + torch.sin(q[0] + q[1] + q[2] + q[3] + q[4] + q[5] + q[6])*p[1] - torch.cos(q[0] + q[1] + q[2] + q[3] + q[4] + q[5] + q[6])*p[0])*(-a[1]*torch.sin(q[0]) - a[2]*torch.sin(q[0] + q[1]) - a[3]*torch.sin(q[0] + q[1] + q[2]) - a[4]*torch.sin(q[0] + q[1] + q[2] + q[3]) - a[5]*torch.sin(q[0] + q[1] + q[2] + q[3] + q[4]) - a[6]*torch.sin(q[0] + q[1] + q[2] + q[3] + q[4] + q[5]) - torch.sin(q[0] + q[1] + q[2] + q[3] + q[4] + q[5] + q[6])*p[0] - torch.cos(q[0] + q[1] + q[2] + q[3] + q[4] + q[5] + q[6])*p[1] + y[1]))/torch.sqrt((p[2] - y[2])**2 + (-a[1]*torch.sin(q[0]) - a[2]*torch.sin(q[0] + q[1]) - a[3]*torch.sin(q[0] + q[1] + q[2]) - a[4]*torch.sin(q[0] + q[1] + q[2] + q[3]) - a[5]*torch.sin(q[0] + q[1] + q[2] + q[3] + q[4]) - a[6]*torch.sin(q[0] + q[1] + q[2] + q[3] + q[4] + q[5]) - torch.sin(q[0] + q[1] + q[2] + q[3] + q[4] + q[5] + q[6])*p[0] - torch.cos(q[0] + q[1] + q[2] + q[3] + q[4] + q[5] + q[6])*p[1] + y[1])**2 + (-a[0] - a[1]*torch.cos(q[0]) - a[2]*torch.cos(q[0] + q[1]) - a[3]*torch.cos(q[0] + q[1] + q[2]) - a[4]*torch.cos(q[0] + q[1] + q[2] + q[3]) - a[5]*torch.cos(q[0] + q[1] + q[2] + q[3] + q[4]) - a[6]*torch.cos(q[0] + q[1] + q[2] + q[3] + q[4] + q[5]) + torch.sin(q[0] + q[1] + q[2] + q[3] + q[4] + q[5] + q[6])*p[1] - torch.cos(q[0] + q[1] + q[2] + q[3] + q[4] + q[5] + q[6])*p[0] + y[0])**2),
 ((a[4]*torch.sin(q[0] + q[1] + q[2] + q[3]) + a[5]*torch.sin(q[0] + q[1] + q[2] + q[3] + q[4]) + a[6]*torch.sin(q[0] + q[1] + q[2] + q[3] + q[4] + q[5]) + torch.sin(q[0] + q[1] + q[2] + q[3] + q[4] + q[5] + q[6])*p[0] + torch.cos(q[0] + q[1] + q[2] + q[3] + q[4] + q[5] + q[6])*p[1])*(-a[0] - a[1]*torch.cos(q[0]) - a[2]*torch.cos(q[0] + q[1]) - a[3]*torch.cos(q[0] + q[1] + q[2]) - a[4]*torch.cos(q[0] + q[1] + q[2] + q[3]) - a[5]*torch.cos(q[0] + q[1] + q[2] + q[3] + q[4]) - a[6]*torch.cos(q[0] + q[1] + q[2] + q[3] + q[4] + q[5]) + torch.sin(q[0] + q[1] + q[2] + q[3] + q[4] + q[5] + q[6])*p[1] - torch.cos(q[0] + q[1] + q[2] + q[3] + q[4] + q[5] + q[6])*p[0] + y[0]) + (-a[4]*torch.cos(q[0] + q[1] + q[2] + q[3]) - a[5]*torch.cos(q[0] + q[1] + q[2] + q[3] + q[4]) - a[6]*torch.cos(q[0] + q[1] + q[2] + q[3] + q[4] + q[5]) + torch.sin(q[0] + q[1] + q[2] + q[3] + q[4] + q[5] + q[6])*p[1] - torch.cos(q[0] + q[1] + q[2] + q[3] + q[4] + q[5] + q[6])*p[0])*(-a[1]*torch.sin(q[0]) - a[2]*torch.sin(q[0] + q[1]) - a[3]*torch.sin(q[0] + q[1] + q[2]) - a[4]*torch.sin(q[0] + q[1] + q[2] + q[3]) - a[5]*torch.sin(q[0] + q[1] + q[2] + q[3] + q[4]) - a[6]*torch.sin(q[0] + q[1] + q[2] + q[3] + q[4] + q[5]) - torch.sin(q[0] + q[1] + q[2] + q[3] + q[4] + q[5] + q[6])*p[0] - torch.cos(q[0] + q[1] + q[2] + q[3] + q[4] + q[5] + q[6])*p[1] + y[1]))/torch.sqrt((p[2] - y[2])**2 + (-a[1]*torch.sin(q[0]) - a[2]*torch.sin(q[0] + q[1]) - a[3]*torch.sin(q[0] + q[1] + q[2]) - a[4]*torch.sin(q[0] + q[1] + q[2] + q[3]) - a[5]*torch.sin(q[0] + q[1] + q[2] + q[3] + q[4]) - a[6]*torch.sin(q[0] + q[1] + q[2] + q[3] + q[4] + q[5]) - torch.sin(q[0] + q[1] + q[2] + q[3] + q[4] + q[5] + q[6])*p[0] - torch.cos(q[0] + q[1] + q[2] + q[3] + q[4] + q[5] + q[6])*p[1] + y[1])**2 + (-a[0] - a[1]*torch.cos(q[0]) - a[2]*torch.cos(q[0] + q[1]) - a[3]*torch.cos(q[0] + q[1] + q[2]) - a[4]*torch.cos(q[0] + q[1] + q[2] + q[3]) - a[5]*torch.cos(q[0] + q[1] + q[2] + q[3] + q[4]) - a[6]*torch.cos(q[0] + q[1] + q[2] + q[3] + q[4] + q[5]) + torch.sin(q[0] + q[1] + q[2] + q[3] + q[4] + q[5] + q[6])*p[1] - torch.cos(q[0] + q[1] + q[2] + q[3] + q[4] + q[5] + q[6])*p[0] + y[0])**2),
 ((a[5]*torch.sin(q[0] + q[1] + q[2] + q[3] + q[4]) + a[6]*torch.sin(q[0] + q[1] + q[2] + q[3] + q[4] + q[5]) + torch.sin(q[0] + q[1] + q[2] + q[3] + q[4] + q[5] + q[6])*p[0] + torch.cos(q[0] + q[1] + q[2] + q[3] + q[4] + q[5] + q[6])*p[1])*(-a[0] - a[1]*torch.cos(q[0]) - a[2]*torch.cos(q[0] + q[1]) - a[3]*torch.cos(q[0] + q[1] + q[2]) - a[4]*torch.cos(q[0] + q[1] + q[2] + q[3]) - a[5]*torch.cos(q[0] + q[1] + q[2] + q[3] + q[4]) - a[6]*torch.cos(q[0] + q[1] + q[2] + q[3] + q[4] + q[5]) + torch.sin(q[0] + q[1] + q[2] + q[3] + q[4] + q[5] + q[6])*p[1] - torch.cos(q[0] + q[1] + q[2] + q[3] + q[4] + q[5] + q[6])*p[0] + y[0]) + (-a[5]*torch.cos(q[0] + q[1] + q[2] + q[3] + q[4]) - a[6]*torch.cos(q[0] + q[1] + q[2] + q[3] + q[4] + q[5]) + torch.sin(q[0] + q[1] + q[2] + q[3] + q[4] + q[5] + q[6])*p[1] - torch.cos(q[0] + q[1] + q[2] + q[3] + q[4] + q[5] + q[6])*p[0])*(-a[1]*torch.sin(q[0]) - a[2]*torch.sin(q[0] + q[1]) - a[3]*torch.sin(q[0] + q[1] + q[2]) - a[4]*torch.sin(q[0] + q[1] + q[2] + q[3]) - a[5]*torch.sin(q[0] + q[1] + q[2] + q[3] + q[4]) - a[6]*torch.sin(q[0] + q[1] + q[2] + q[3] + q[4] + q[5]) - torch.sin(q[0] + q[1] + q[2] + q[3] + q[4] + q[5] + q[6])*p[0] - torch.cos(q[0] + q[1] + q[2] + q[3] + q[4] + q[5] + q[6])*p[1] + y[1]))/torch.sqrt((p[2] - y[2])**2 + (-a[1]*torch.sin(q[0]) - a[2]*torch.sin(q[0] + q[1]) - a[3]*torch.sin(q[0] + q[1] + q[2]) - a[4]*torch.sin(q[0] + q[1] + q[2] + q[3]) - a[5]*torch.sin(q[0] + q[1] + q[2] + q[3] + q[4]) - a[6]*torch.sin(q[0] + q[1] + q[2] + q[3] + q[4] + q[5]) - torch.sin(q[0] + q[1] + q[2] + q[3] + q[4] + q[5] + q[6])*p[0] - torch.cos(q[0] + q[1] + q[2] + q[3] + q[4] + q[5] + q[6])*p[1] + y[1])**2 + (-a[0] - a[1]*torch.cos(q[0]) - a[2]*torch.cos(q[0] + q[1]) - a[3]*torch.cos(q[0] + q[1] + q[2]) - a[4]*torch.cos(q[0] + q[1] + q[2] + q[3]) - a[5]*torch.cos(q[0] + q[1] + q[2] + q[3] + q[4]) - a[6]*torch.cos(q[0] + q[1] + q[2] + q[3] + q[4] + q[5]) + torch.sin(q[0] + q[1] + q[2] + q[3] + q[4] + q[5] + q[6])*p[1] - torch.cos(q[0] + q[1] + q[2] + q[3] + q[4] + q[5] + q[6])*p[0] + y[0])**2),
 ((a[6]*torch.sin(q[0] + q[1] + q[2] + q[3] + q[4] + q[5]) + torch.sin(q[0] + q[1] + q[2] + q[3] + q[4] + q[5] + q[6])*p[0] + torch.cos(q[0] + q[1] + q[2] + q[3] + q[4] + q[5] + q[6])*p[1])*(-a[0] - a[1]*torch.cos(q[0]) - a[2]*torch.cos(q[0] + q[1]) - a[3]*torch.cos(q[0] + q[1] + q[2]) - a[4]*torch.cos(q[0] + q[1] + q[2] + q[3]) - a[5]*torch.cos(q[0] + q[1] + q[2] + q[3] + q[4]) - a[6]*torch.cos(q[0] + q[1] + q[2] + q[3] + q[4] + q[5]) + torch.sin(q[0] + q[1] + q[2] + q[3] + q[4] + q[5] + q[6])*p[1] - torch.cos(q[0] + q[1] + q[2] + q[3] + q[4] + q[5] + q[6])*p[0] + y[0]) + (-a[6]*torch.cos(q[0] + q[1] + q[2] + q[3] + q[4] + q[5]) + torch.sin(q[0] + q[1] + q[2] + q[3] + q[4] + q[5] + q[6])*p[1] - torch.cos(q[0] + q[1] + q[2] + q[3] + q[4] + q[5] + q[6])*p[0])*(-a[1]*torch.sin(q[0]) - a[2]*torch.sin(q[0] + q[1]) - a[3]*torch.sin(q[0] + q[1] + q[2]) - a[4]*torch.sin(q[0] + q[1] + q[2] + q[3]) - a[5]*torch.sin(q[0] + q[1] + q[2] + q[3] + q[4]) - a[6]*torch.sin(q[0] + q[1] + q[2] + q[3] + q[4] + q[5]) - torch.sin(q[0] + q[1] + q[2] + q[3] + q[4] + q[5] + q[6])*p[0] - torch.cos(q[0] + q[1] + q[2] + q[3] + q[4] + q[5] + q[6])*p[1] + y[1]))/torch.sqrt((p[2] - y[2])**2 + (-a[1]*torch.sin(q[0]) - a[2]*torch.sin(q[0] + q[1]) - a[3]*torch.sin(q[0] + q[1] + q[2]) - a[4]*torch.sin(q[0] + q[1] + q[2] + q[3]) - a[5]*torch.sin(q[0] + q[1] + q[2] + q[3] + q[4]) - a[6]*torch.sin(q[0] + q[1] + q[2] + q[3] + q[4] + q[5]) - torch.sin(q[0] + q[1] + q[2] + q[3] + q[4] + q[5] + q[6])*p[0] - torch.cos(q[0] + q[1] + q[2] + q[3] + q[4] + q[5] + q[6])*p[1] + y[1])**2 + (-a[0] - a[1]*torch.cos(q[0]) - a[2]*torch.cos(q[0] + q[1]) - a[3]*torch.cos(q[0] + q[1] + q[2]) - a[4]*torch.cos(q[0] + q[1] + q[2] + q[3]) - a[5]*torch.cos(q[0] + q[1] + q[2] + q[3] + q[4]) - a[6]*torch.cos(q[0] + q[1] + q[2] + q[3] + q[4] + q[5]) + torch.sin(q[0] + q[1] + q[2] + q[3] + q[4] + q[5] + q[6])*p[1] - torch.cos(q[0] + q[1] + q[2] + q[3] + q[4] + q[5] + q[6])*p[0] + y[0])**2),
 (-a[0]*torch.sin(q[0] + q[1] + q[2] + q[3] + q[4] + q[5] + q[6])*p[0] - a[0]*torch.cos(q[0] + q[1] + q[2] + q[3] + q[4] + q[5] + q[6])*p[1] - a[1]*torch.sin(q[1] + q[2] + q[3] + q[4] + q[5] + q[6])*p[0] - a[1]*torch.cos(q[1] + q[2] + q[3] + q[4] + q[5] + q[6])*p[1] - a[2]*torch.sin(q[2] + q[3] + q[4] + q[5] + q[6])*p[0] - a[2]*torch.cos(q[2] + q[3] + q[4] + q[5] + q[6])*p[1] - a[3]*torch.sin(q[3] + q[4] + q[5] + q[6])*p[0] - a[3]*torch.cos(q[3] + q[4] + q[5] + q[6])*p[1] - a[4]*torch.sin(q[4] + q[5] + q[6])*p[0] - a[4]*torch.cos(q[4] + q[5] + q[6])*p[1] - a[5]*torch.sin(q[5] + q[6])*p[0] - a[5]*torch.cos(q[5] + q[6])*p[1] - a[6]*torch.sin(q[6])*p[0] - a[6]*torch.cos(q[6])*p[1] + torch.sin(q[0] + q[1] + q[2] + q[3] + q[4] + q[5] + q[6])*p[0]*y[0] + torch.sin(q[0] + q[1] + q[2] + q[3] + q[4] + q[5] + q[6])*p[1]*y[1] - torch.cos(q[0] + q[1] + q[2] + q[3] + q[4] + q[5] + q[6])*p[0]*y[1] + torch.cos(q[0] + q[1] + q[2] + q[3] + q[4] + q[5] + q[6])*p[1]*y[0])/torch.sqrt((p[2] - y[2])**2 + (-a[1]*torch.sin(q[0]) - a[2]*torch.sin(q[0] + q[1]) - a[3]*torch.sin(q[0] + q[1] + q[2]) - a[4]*torch.sin(q[0] + q[1] + q[2] + q[3]) - a[5]*torch.sin(q[0] + q[1] + q[2] + q[3] + q[4]) - a[6]*torch.sin(q[0] + q[1] + q[2] + q[3] + q[4] + q[5]) - torch.sin(q[0] + q[1] + q[2] + q[3] + q[4] + q[5] + q[6])*p[0] - torch.cos(q[0] + q[1] + q[2] + q[3] + q[4] + q[5] + q[6])*p[1] + y[1])**2 + (-a[0] - a[1]*torch.cos(q[0]) - a[2]*torch.cos(q[0] + q[1]) - a[3]*torch.cos(q[0] + q[1] + q[2]) - a[4]*torch.cos(q[0] + q[1] + q[2] + q[3]) - a[5]*torch.cos(q[0] + q[1] + q[2] + q[3] + q[4]) - a[6]*torch.cos(q[0] + q[1] + q[2] + q[3] + q[4] + q[5]) + torch.sin(q[0] + q[1] + q[2] + q[3] + q[4] + q[5] + q[6])*p[1] - torch.cos(q[0] + q[1] + q[2] + q[3] + q[4] + q[5] + q[6])*p[0] + y[0])**2)]])